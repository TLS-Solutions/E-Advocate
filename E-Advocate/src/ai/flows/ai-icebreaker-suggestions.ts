// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Provides AI-generated icebreaker questions based on user profiles.
 *
 * - generateIcebreakerSuggestions - A function that generates icebreaker questions.
 * - IcebreakerInput - The input type for the generateIcebreakerSuggestions function.
 * - IcebreakerOutput - The return type for the generateIcebreakerSuggestions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const IcebreakerInputSchema = z.object({
  userProfile: z.string().describe('The profile of the current user.'),
  interestedUserProfile: z.string().describe('The profile of the person the user is interested in.'),
});
export type IcebreakerInput = z.infer<typeof IcebreakerInputSchema>;

const IcebreakerOutputSchema = z.object({
  icebreakerQuestions: z.array(z.string()).describe('A list of AI-generated icebreaker questions.'),
});
export type IcebreakerOutput = z.infer<typeof IcebreakerOutputSchema>;

export async function generateIcebreakerSuggestions(input: IcebreakerInput): Promise<IcebreakerOutput> {
  return generateIcebreakerSuggestionsFlow(input);
}

const generateIcebreakerSuggestionsPrompt = ai.definePrompt({
  name: 'generateIcebreakerSuggestionsPrompt',
  input: {schema: IcebreakerInputSchema},
  output: {schema: IcebreakerOutputSchema},
  prompt: `You are an AI assistant designed to generate engaging icebreaker questions based on user profiles.

  Analyze the two profiles provided and create a list of icebreaker questions that would facilitate an interesting conversation between them.
  Consider their interests, hobbies, and any other relevant information to craft unique and personalized questions.

  User Profile: {{{userProfile}}}
  Interested User Profile: {{{interestedUserProfile}}}

  Provide a diverse set of questions that cover a range of topics.
  `,
});

const generateIcebreakerSuggestionsFlow = ai.defineFlow(
  {
    name: 'generateIcebreakerSuggestionsFlow',
    inputSchema: IcebreakerInputSchema,
    outputSchema: IcebreakerOutputSchema,
  },
  async input => {
    const {output} = await generateIcebreakerSuggestionsPrompt(input);
    return output!;
  }
);
